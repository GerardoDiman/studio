// src/ai/flows/automation-recommendation.ts
'use server';

/**
 * @fileOverview A flow for generating automation recommendations based on user input.
 *
 * - automationRecommendation - A function that generates an automation recommendation.
 * - AutomationRecommendationInput - The input type for the automationRecommendation function.
 * - AutomationRecommendationOutput - The return type for the automationRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AutomationRecommendationInputSchema = z.object({
  processDescription: z
    .string()
    .describe("A description of the user's business process or challenge."),
});
export type AutomationRecommendationInput = z.infer<typeof AutomationRecommendationInputSchema>;

const AutomationRecommendationOutputSchema = z.object({
  recommendation: z.string().describe('The automation recommendation generated by the AI.'),
});
export type AutomationRecommendationOutput = z.infer<typeof AutomationRecommendationOutputSchema>;

export async function automationRecommendation(input: AutomationRecommendationInput): Promise<AutomationRecommendationOutput> {
  return automationRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'automationRecommendationPrompt',
  input: {schema: AutomationRecommendationInputSchema},
  output: {schema: AutomationRecommendationOutputSchema},
  prompt: `You are an expert at DIMAN AUTOMATIONS, specializing in providing automation solutions for businesses. Based on the description of the user's business process or challenge, provide a relevant automation recommendation, highlighting suitable services like RPA, system integration, analysis and consulting, cloud, AI/ML, and security and compliance.

User Description: {{{processDescription}}}`,
});

const automationRecommendationFlow = ai.defineFlow(
  {
    name: 'automationRecommendationFlow',
    inputSchema: AutomationRecommendationInputSchema,
    outputSchema: AutomationRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
